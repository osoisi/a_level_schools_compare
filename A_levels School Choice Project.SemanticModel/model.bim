{
  "compatibilityLevel": 1567,
  "model": {
    "annotations": [
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.128.1380.0 (24.04)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"School Inspections\",\"England postcodes\",\"Associations\",\"AdmissionPolicy\",\"School Type\",\"Measure Table\",\"Locations\",\"dimHigherEducation\",\"AdmissionPolicyExtended\",\"dimAdmissionPolicytest\",\"dimCharterBody\",\"dimSchoolTypes\",\"factSchoolInspections\"]"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      }
    ],
    "culture": "en-GB",
    "cultures": [
      {
        "name": "en-GB",
        "linguisticMetadata": {
          "content": {
            "Language": "en-US",
            "Version": "1.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "expressions": [
      {
        "name": "AdmissionPolicyExtended",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
          "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
          "    dbo_dimAdmissionPolicytest = a_levels_study_db{[Schema=\"dbo\",Item=\"dimAdmissionPolicytest\"]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(dbo_dimAdmissionPolicytest, {\"ADMPOL\"}, AdmissionPolicy, {\"Policy Name\"}, \"AdmissionPolicy\", JoinKind.LeftOuter),",
          "    #\"Expanded AdmissionPolicy\" = Table.ExpandTableColumn(#\"Merged Queries\", \"AdmissionPolicy\", {\"Index\"}, {\"Index\"})",
          "in",
          "    #\"Expanded AdmissionPolicy\""
        ],
        "kind": "m",
        "lineageTag": "1f79f18f-1d08-47f4-9cd9-b44bf0bafaaa"
      },
      {
        "name": "dimAdmissionPolicytest",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
          "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
          "    dbo_dimAdmissionPolicytest = a_levels_study_db{[Schema=\"dbo\",Item=\"dimAdmissionPolicytest\"]}[Data]",
          "in",
          "    dbo_dimAdmissionPolicytest"
        ],
        "kind": "m",
        "lineageTag": "b5e985a1-9b75-4307-a941-dfc465e82327"
      },
      {
        "name": "dimCharterBody",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
          "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
          "    dbo_dimCharterBody = a_levels_study_db{[Schema=\"dbo\",Item=\"dimCharterBody\"]}[Data]",
          "in",
          "    dbo_dimCharterBody"
        ],
        "kind": "m",
        "lineageTag": "a2667a5b-7071-46cb-88df-f42d2ecc42f3"
      },
      {
        "name": "dimSchoolTypes",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
          "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
          "    dbo_dimSchoolTypes = a_levels_study_db{[Schema=\"dbo\",Item=\"dimSchoolTypes\"]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(dbo_dimSchoolTypes, {\"SCHOOLTYPE\"}, #\"School Type\", {\"School Type\"}, \"School Type\", JoinKind.LeftOuter),",
          "    #\"Expanded School Type\" = Table.ExpandTableColumn(#\"Merged Queries\", \"School Type\", {\"Type ID\"}, {\"Type ID\"})",
          "in",
          "    #\"Expanded School Type\""
        ],
        "kind": "m",
        "lineageTag": "76046b8d-8f4f-4a79-b555-5e80497d3961"
      },
      {
        "name": "factSchoolInspections",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
          "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
          "    dbo_factSchoolInspections = a_levels_study_db{[Schema=\"dbo\",Item=\"factSchoolInspections\"]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(dbo_factSchoolInspections, {\"URN\"}, AdmissionPolicyExtended, {\"URN\"}, \"AdmissionPolicyExtended\", JoinKind.LeftOuter),",
          "    #\"Expanded AdmissionPolicyExtended\" = Table.ExpandTableColumn(#\"Merged Queries\", \"AdmissionPolicyExtended\", {\"Index\"}, {\"Index\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded AdmissionPolicyExtended\",{{\"Index\", \"Admission Policy ID\"}}),",
          "    #\"Merged Queries1\" = Table.NestedJoin(#\"Renamed Columns\", {\"URN\"}, dimCharterBody, {\"URN\"}, \"dimCharterBody\", JoinKind.LeftOuter),",
          "    #\"Expanded dimCharterBody\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"dimCharterBody\", {\"BodyID\"}, {\"BodyID\"}),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded dimCharterBody\",{{\"BodyID\", \"Relchar ID\"}}),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns1\",null,3,Replacer.ReplaceValue,{\"Admission Policy ID\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"OFSTEDLASTINSP\", type date}}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"SCHNAME\", \"TOWN\", \"POSTCODE\"})",
          "in",
          "    #\"Removed Columns\""
        ],
        "kind": "m",
        "lineageTag": "cb9da2fc-ca0d-40e4-8ff9-5914ea666095"
      },
      {
        "name": "Locations",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
          "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
          "    dbo_factSchoolInspections = a_levels_study_db{[Schema=\"dbo\",Item=\"factSchoolInspections\"]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(dbo_factSchoolInspections, {\"URN\"}, AdmissionPolicyExtended, {\"URN\"}, \"AdmissionPolicyExtended\", JoinKind.LeftOuter),",
          "    #\"Expanded AdmissionPolicyExtended\" = Table.ExpandTableColumn(#\"Merged Queries\", \"AdmissionPolicyExtended\", {\"Index\"}, {\"Index\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded AdmissionPolicyExtended\",{{\"Index\", \"Admission Policy ID\"}}),",
          "    #\"Merged Queries1\" = Table.NestedJoin(#\"Renamed Columns\", {\"URN\"}, dimCharterBody, {\"URN\"}, \"dimCharterBody\", JoinKind.LeftOuter),",
          "    #\"Expanded dimCharterBody\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"dimCharterBody\", {\"BodyID\"}, {\"BodyID\"}),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded dimCharterBody\",{{\"BodyID\", \"Relchar ID\"}}),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns1\",null,3,Replacer.ReplaceValue,{\"Admission Policy ID\"}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"OFSTEDLASTINSP\", type date}}),",
          "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\",{\"LocationCode\", \"SCHNAME\", \"TOWN\", \"POSTCODE\"})",
          "in",
          "    #\"Removed Other Columns\""
        ],
        "kind": "m",
        "lineageTag": "fd001017-2180-4f80-8ea1-6565ff635492"
      }
    ],
    "relationships": [
      {
        "name": "5eea9290-c227-479b-b371-3f40e168b7df",
        "fromColumn": "Association ID",
        "fromTable": "School Inspections",
        "toColumn": "Association ID",
        "toTable": "Associations"
      },
      {
        "name": "f92b447d-0711-48b8-9a3d-12ee7b6ef373",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "URN",
        "fromTable": "dimHigherEducation",
        "toColumn": "URN",
        "toTable": "School Inspections"
      },
      {
        "name": "a1341038-73fa-4224-98fd-214938731e62",
        "fromColumn": "Postcode",
        "fromTable": "School Inspections",
        "toColumn": "Postcode",
        "toTable": "England postcodes"
      },
      {
        "name": "a60fbb09-964a-4c93-b348-6e2a50dacb07",
        "fromColumn": "Admission Policy ID",
        "fromTable": "School Inspections",
        "toColumn": "Index",
        "toTable": "AdmissionPolicy"
      },
      {
        "name": "e4981c7c-dc10-4db1-a746-4611f142da90",
        "fromColumn": "School Type ID",
        "fromTable": "School Inspections",
        "toColumn": "Type ID",
        "toTable": "School Type"
      }
    ],
    "sourceQueryCulture": "en-GB",
    "tables": [
      {
        "name": "School Inspections",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "URN",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "3471a09c-91d4-41c4-9d15-35163cbd9d9b",
            "sourceColumn": "URN",
            "summarizeBy": "none"
          },
          {
            "name": "Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "016233d1-8425-4c53-a80c-e5d6670edcfa",
            "sourceColumn": "Location ID",
            "summarizeBy": "none"
          },
          {
            "name": "OFSTED Rating",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0e029866-7c85-46a5-8e45-4c0ba788236f",
            "sourceColumn": "OFSTED Rating",
            "summarizeBy": "none"
          },
          {
            "name": "OFSTED Inspection",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "80bff283-c04d-42c4-bd08-749145a5f401",
            "sourceColumn": "OFSTED Inspection",
            "summarizeBy": "none"
          },
          {
            "name": "Admission Policy ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "isHidden": true,
            "lineageTag": "ff26a325-d9ad-413c-9b56-8893e0aa78b7",
            "sourceColumn": "Admission Policy ID",
            "summarizeBy": "none"
          },
          {
            "name": "Association ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "235dee66-dc71-428a-9948-b48146a3b84e",
            "sourceColumn": "Association ID",
            "summarizeBy": "none"
          },
          {
            "name": "Postcode",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataCategory": "PostalCode",
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "4d52c3f1-93be-470b-ac18-6277d96c97bd",
            "sourceColumn": "Postcode",
            "summarizeBy": "none"
          },
          {
            "name": "School Type ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "7b573315-60fb-4291-bfdc-6487ce2d2e8c",
            "sourceColumn": "School Type ID",
            "summarizeBy": "none"
          },
          {
            "name": "Rating Grade",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0ab5b9a5-8a0a-4996-84eb-452feb121851",
            "sourceColumn": "Rating Grade",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "5ab7ff0e-c745-46d7-9f86-dd41f4a65eff",
        "partitions": [
          {
            "name": "School Inspections",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
                "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
                "    dbo_factSchoolInspections = a_levels_study_db{[Schema=\"dbo\",Item=\"factSchoolInspections\"]}[Data],",
                "    #\"Merged Queries\" = Table.NestedJoin(dbo_factSchoolInspections, {\"URN\"}, AdmissionPolicyExtended, {\"URN\"}, \"AdmissionPolicyExtended\", JoinKind.LeftOuter),",
                "    #\"Expanded AdmissionPolicyExtended\" = Table.ExpandTableColumn(#\"Merged Queries\", \"AdmissionPolicyExtended\", {\"Index\"}, {\"Index\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded AdmissionPolicyExtended\",{{\"Index\", \"Admission Policy ID\"}}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Renamed Columns\", {\"URN\"}, dimCharterBody, {\"URN\"}, \"dimCharterBody\", JoinKind.LeftOuter),",
                "    #\"Expanded dimCharterBody\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"dimCharterBody\", {\"BodyID\"}, {\"BodyID\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded dimCharterBody\",{{\"BodyID\", \"Relchar ID\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns1\",null,3,Replacer.ReplaceValue,{\"Admission Policy ID\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"OFSTEDLASTINSP\", type date}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"SCHNAME\", \"TOWN\"}),",
                "    #\"Merged Queries2\" = Table.NestedJoin(#\"Removed Columns\", {\"URN\"}, dimSchoolTypes, {\"URN\"}, \"dimSchoolTypes\", JoinKind.LeftOuter),",
                "    #\"Expanded dimSchoolTypes\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"dimSchoolTypes\", {\"Type ID\"}, {\"Type ID\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded dimSchoolTypes\",{{\"Type ID\", \"School Type ID\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns2\",{{\"Admission Policy ID\", Int64.Type}}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Changed Type1\",{{\"OFSTEDRATING\", \"OFSTED Rating\"}, {\"OFSTEDLASTINSP\", \"OFSTED Inspection\"}, {\"Relchar ID\", \"Association ID\"}, {\"POSTCODE\", \"Postcode\"}, {\"LocationCode\", \"Location ID\"}}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Renamed Columns3\", \"Custom\", each if [OFSTED Rating] = \"Good\" then 8 else if [OFSTED Rating] = \"Outstanding\" then 10 else if [OFSTED Rating] = \"Requires improvement\" then 6 else if [OFSTED Rating] = \"Inadequate\" then 4 else if [OFSTED Rating] = \"Serious Weakness\" then 2 else if [OFSTED Rating] = \"Special Measures\" then 1 else null),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Conditional Column\",{\"URN\", \"Location ID\", \"Postcode\", \"OFSTED Rating\", \"Custom\", \"OFSTED Inspection\", \"Admission Policy ID\", \"Association ID\", \"School Type ID\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Custom\", \"Rating Grade\"}})",
                "in",
                "    #\"Renamed Columns4\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Associations",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Association ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "4952424b-271e-4176-9a7f-4f820dd183e2",
            "sourceColumn": "Association ID",
            "summarizeBy": "none"
          },
          {
            "name": "Association",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1e665d4f-dff9-4e3a-8dc2-b3fce59beb3b",
            "sourceColumn": "Association",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "100142bb-6a08-4ee3-a31b-8bde00b75cc6",
        "partitions": [
          {
            "name": "Associations",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
                "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
                "    dbo_dimCharterBody = a_levels_study_db{[Schema=\"dbo\",Item=\"dimCharterBody\"]}[Data],",
                "    #\"Removed Duplicates\" = Table.Distinct(dbo_dimCharterBody, {\"BodyID\"}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Removed Duplicates\",{\"URN\", \"RELCHAR\", \"RelCharGroup\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"BodyID\", \"Association ID\"}, {\"CharterBody\", \"Association\"}}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Renamed Columns\",{{\"Association ID\", Order.Ascending}})",
                "in",
                "    #\"Sorted Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "AdmissionPolicy",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Index",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "df828223-37a6-4059-b72b-cbca229d7eb9",
            "sourceColumn": "Index",
            "summarizeBy": "none"
          },
          {
            "name": "Policy Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4d7b0b92-b79b-479f-a347-eccff7135401",
            "sourceColumn": "Policy Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "55fc6b1c-48c8-466e-b20d-de4e7c2a0e3f",
        "partitions": [
          {
            "name": "AdmissionPolicy",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
                "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
                "    dbo_dimAdmissionPolicytest = a_levels_study_db{[Schema=\"dbo\",Item=\"dimAdmissionPolicytest\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_dimAdmissionPolicytest,{\"URN\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\"),",
                "    #\"Added Index\" = Table.AddIndexColumn(#\"Removed Duplicates\", \"Index\", 1, 1, Int64.Type),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Index\",{\"Index\", \"ADMPOL\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Reordered Columns\",null,\"Not applicable\",Replacer.ReplaceValue,{\"ADMPOL\"}),",
                "    #\"Removed Duplicates1\" = Table.Distinct(#\"Replaced Value\", {\"ADMPOL\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Duplicates1\",{{\"ADMPOL\", \"Policy Name\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "School Type",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Type ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "cac133ba-2da2-42f9-b4f8-de53bec41305",
            "sourceColumn": "Type ID",
            "summarizeBy": "none"
          },
          {
            "name": "School Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7f66223b-3b86-41c5-a294-b91b606851ed",
            "sourceColumn": "School Type",
            "summarizeBy": "none"
          },
          {
            "name": "School Type Group",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "db93f060-67c7-465f-a8a2-bb9f360b7cc9",
            "sourceColumn": "School Type Group",
            "summarizeBy": "none"
          },
          {
            "name": "Average Age (Low)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "a4de953e-bc8d-4ce8-b2b3-4d59704738f6",
            "sourceColumn": "Average Age (Low)",
            "summarizeBy": "none"
          },
          {
            "name": "Average Age (High)",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "035f9bbe-c070-44f1-bead-de3a09cd3d55",
            "sourceColumn": "Average Age (High)",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "e449b6b6-d66d-4519-925f-456731b57da0",
        "partitions": [
          {
            "name": "School Type",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
                "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
                "    dbo_dimSchoolTypes = a_levels_study_db{[Schema=\"dbo\",Item=\"dimSchoolTypes\"]}[Data],",
                "    #\"Grouped Rows\" = Table.Group(dbo_dimSchoolTypes, {\"SCHOOLTYPE\"}, {{\"Average Age (Low)\", each List.Average([AGELOW]), type nullable text}, {\"Average Age (High)\", each List.Average([AGEHIGH]), type nullable text}}),",
                "    #\"Added Index\" = Table.AddIndexColumn(#\"Grouped Rows\", \"Index\", 1, 1, Int64.Type),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Index\",{\"Index\", \"SCHOOLTYPE\", \"Average Age (Low)\", \"Average Age (High)\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Index\", \"Type ID\"}, {\"SCHOOLTYPE\", \"School Type\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Average Age (Low)\", Int64.Type}, {\"Average Age (High)\", Int64.Type}}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Changed Type\", \"School Type Group\", each if Text.Contains([School Type], \"Academy\") then \"Academy School\" else if Text.Contains([School Type], \"Special\") then \"Special School\" else if Text.Contains([School Type], \"Independent\") then \"Independent School\" else if Text.Contains([School Type], \"Foundation\") then \"Foundation School\" else if Text.Contains([School Type], \"Further\") then \"Further Education\" else \"Other School Type\"),",
                "    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Added Conditional Column\",{\"Type ID\", \"School Type\", \"School Type Group\", \"Average Age (Low)\", \"Average Age (High)\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Reordered Columns1\",{{\"Type ID\", Int64.Type}, {\"School Type Group\", type text}, {\"Average Age (Low)\", Int64.Type}, {\"Average Age (High)\", Int64.Type}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "England postcodes",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Postcode",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataCategory": "PostalCode",
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "84b3044e-af76-4f68-9690-a35cfdc1ff21",
            "sourceColumn": "Postcode",
            "summarizeBy": "none"
          },
          {
            "name": "In Use?",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "7c8ccb0b-e9dc-460a-8fb1-0cea9e315ae9",
            "sourceColumn": "In Use?",
            "summarizeBy": "none"
          },
          {
            "name": "Latitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataCategory": "Latitude",
            "dataType": "double",
            "lineageTag": "6041b364-e390-4cc7-ace3-585a22bd6e0f",
            "sourceColumn": "Latitude",
            "summarizeBy": "none"
          },
          {
            "name": "Longitude",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataCategory": "Longitude",
            "dataType": "double",
            "lineageTag": "f4c1003d-72b0-4846-8ada-615b815114d4",
            "sourceColumn": "Longitude",
            "summarizeBy": "none"
          },
          {
            "name": "Rural/urban",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4b7437d8-63e7-4891-9f95-07581132530f",
            "sourceColumn": "Rural/urban",
            "summarizeBy": "none"
          },
          {
            "name": "Region",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataCategory": "Uncategorized",
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "e0774232-8769-48d9-9b6c-6b162b2167ba",
            "sourceColumn": "Region",
            "summarizeBy": "none"
          },
          {
            "name": "Average Income",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "7d585247-4cad-48c0-9c5b-5915d12d4bf7",
            "sourceColumn": "Average Income",
            "summarizeBy": "none"
          },
          {
            "name": "School Ward",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataCategory": "Place",
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "377ba837-960e-4da0-bd01-78d4e9bcc44e",
            "sourceColumn": "School Ward",
            "summarizeBy": "none"
          },
          {
            "name": "School District",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataCategory": "Place",
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "15c67f4a-a832-454e-ba9a-7a4835e7c51b",
            "sourceColumn": "School District",
            "summarizeBy": "none"
          },
          {
            "name": "School County",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataCategory": "Place",
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "95aa2e71-dc54-4867-817b-ff71eb832e7c",
            "sourceColumn": "School County",
            "summarizeBy": "none"
          }
        ],
        "hierarchies": [
          {
            "name": "Region Hierarchy",
            "levels": [
              {
                "name": "Region",
                "column": "Region",
                "lineageTag": "f2e1e629-223e-4c64-8630-d1835dad6305",
                "ordinal": 0
              },
              {
                "name": "School County",
                "column": "School County",
                "lineageTag": "03c4a56a-2bb4-4eba-9118-8dd451208428",
                "ordinal": 1
              },
              {
                "name": "School District",
                "column": "School District",
                "lineageTag": "41161dfd-c981-4997-864d-5ee7f5b7ae26",
                "ordinal": 2
              },
              {
                "name": "School Ward",
                "column": "School Ward",
                "lineageTag": "6d3d3db4-3ba5-4a82-a5a4-50139beae229",
                "ordinal": 3
              },
              {
                "name": "Postcode",
                "column": "Postcode",
                "lineageTag": "daba96eb-bd3a-4925-8c09-f220cb5c5975",
                "ordinal": 4
              }
            ],
            "lineageTag": "53664bea-9a5d-41dc-b595-de6a0d23c400"
          }
        ],
        "lineageTag": "517392ec-4b67-4ef6-9e5e-8ed2e3674c1f",
        "partitions": [
          {
            "name": "England postcodes",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Csv.Document(File.Contents(\"C:\\Users\\aa1\\Desktop\\data_repo\\a_levels_schools\\a_level_schools_compare\\England postcodes.csv\"),[Delimiter=\",\", Columns=58, Encoding=1252, QuoteStyle=QuoteStyle.None]),",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Postcode\", type text}, {\"In Use?\", type text}, {\"Latitude\", type number}, {\"Longitude\", type number}, {\"Easting\", Int64.Type}, {\"Northing\", Int64.Type}, {\"Grid Ref\", type text}, {\"County\", type text}, {\"District\", type text}, {\"Ward\", type text}, {\"District Code\", type text}, {\"Ward Code\", type text}, {\"Country\", type text}, {\"County Code\", type text}, {\"Constituency\", type text}, {\"Introduced\", type date}, {\"Terminated\", type date}, {\"Parish\", type text}, {\"National Park\", type text}, {\"Population\", Int64.Type}, {\"Households\", Int64.Type}, {\"Built up area\", type text}, {\"Built up sub-division\", type text}, {\"Lower layer super output area\", type text}, {\"Rural/urban\", type text}, {\"Region\", type text}, {\"Altitude\", Int64.Type}, {\"London zone\", type text}, {\"LSOA Code\", type text}, {\"Local authority\", type text}, {\"MSOA Code\", type text}, {\"Middle layer super output area\", type text}, {\"Parish Code\", type text}, {\"Census output area\", type text}, {\"Constituency Code\", type text}, {\"Index of Multiple Deprivation\", Int64.Type}, {\"Quality\", Int64.Type}, {\"User Type\", Int64.Type}, {\"Last updated\", type date}, {\"Nearest station\", type text}, {\"Distance to station\", type number}, {\"Postcode area\", type text}, {\"Postcode district\", type text}, {\"Police force\", type text}, {\"Water company\", type text}, {\"Plus Code\", type text}, {\"Average Income\", Int64.Type}, {\"Sewage Company\", type text}, {\"Travel To Work Area\", type text}, {\"ITL level 2\", type text}, {\"ITL level 3\", type text}, {\"Distance to sea\", type number}, {\"LSOA21 Code\", type text}, {\"Lower layer super output area 2021\", type text}, {\"MSOA21 Code\", type text}, {\"Middle layer super output area 2021\", type text}, {\"Census output area 2021\", type text}, {\"IMD decile\", Int64.Type}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([#\"In Use?\"] = \"Yes\")),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"Terminated\", \"Parish\", \"National Park\", \"Built up area\", \"Built up sub-division\", \"Lower layer super output area\", \"London zone\", \"LSOA Code\", \"Altitude\", \"MSOA Code\", \"Middle layer super output area\", \"Parish Code\", \"Census output area\", \"Constituency Code\", \"Index of Multiple Deprivation\", \"Quality\", \"User Type\", \"Last updated\", \"Nearest station\", \"Distance to station\", \"Postcode area\", \"Postcode district\", \"Police force\", \"Water company\", \"Plus Code\", \"Sewage Company\", \"Travel To Work Area\", \"ITL level 2\", \"ITL level 3\", \"Distance to sea\", \"LSOA21 Code\", \"Lower layer super output area 2021\", \"MSOA21 Code\", \"Middle layer super output area 2021\", \"Census output area 2021\", \"IMD decile\", \"Population\", \"Households\", \"Introduced\", \"County Code\", \"District Code\", \"Ward Code\", \"Easting\", \"Northing\", \"Grid Ref\"}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Removed Columns\", \"Country\", \"Country - Copy\"),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Duplicated Column\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"County\", \"District\", \"Constituency\", \"Ward\", \"Country\", \"Country - Copy\", \"Rural/urban\", \"Region\", \"Local authority\", \"Average Income\"}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Reordered Columns\",{\"Constituency\"}),",
                "    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Removed Columns1\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"Ward\", \"District\", \"County\", \"Country\", \"Country - Copy\", \"Rural/urban\", \"Region\", \"Local authority\", \"Average Income\"}),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Reordered Columns1\", \"County\", \"County - Copy\"),",
                "    #\"Duplicated Column2\" = Table.DuplicateColumn(#\"Duplicated Column1\", \"Country - Copy\", \"Country - Copy - Copy\"),",
                "    #\"Reordered Columns4\" = Table.ReorderColumns(#\"Duplicated Column2\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"Ward\", \"District\", \"County\", \"Country\", \"Country - Copy\", \"Country - Copy - Copy\", \"Rural/urban\", \"Region\", \"Local authority\", \"Average Income\", \"County - Copy\"}),",
                "    #\"Reordered Columns2\" = Table.ReorderColumns(#\"Reordered Columns4\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"Ward\", \"District\", \"County\", \"Country\", \"County - Copy\", \"Local authority\", \"Country - Copy\", \"Rural/urban\", \"Region\", \"Average Income\"}),",
                "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Reordered Columns2\",{\"Local authority\"}),",
                "    #\"Reordered Columns3\" = Table.ReorderColumns(#\"Removed Columns2\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"Ward\", \"District\", \"County\", \"Country\", \"County - Copy\", \"Country - Copy\", \"Region\", \"Rural/urban\", \"Average Income\"}),",
                "    #\"Merged Columns\" = Table.CombineColumns(#\"Reordered Columns3\",{\"District\", \"County\", \"Country\"},Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\"School District\"),",
                "    #\"Merged Columns1\" = Table.CombineColumns(#\"Merged Columns\",{\"County - Copy\", \"Country - Copy\"},Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\"School Country\"),",
                "    #\"Reordered Columns5\" = Table.ReorderColumns(#\"Merged Columns1\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"Ward\", \"Country - Copy - Copy\", \"School District\", \"School Country\", \"Region\", \"Rural/urban\", \"Average Income\"}),",
                "    #\"Removed Columns3\" = Table.RemoveColumns(#\"Reordered Columns5\",{\"Country - Copy - Copy\"}),",
                "    #\"Duplicated Column3\" = Table.DuplicateColumn(#\"Removed Columns3\", \"School Country\", \"School Country - Copy\"),",
                "    #\"Reordered Columns6\" = Table.ReorderColumns(#\"Duplicated Column3\",{\"Postcode\", \"In Use?\", \"Latitude\", \"Longitude\", \"Ward\", \"School Country - Copy\", \"School District\", \"School Country\", \"Region\", \"Rural/urban\", \"Average Income\"}),",
                "    #\"Merged Columns2\" = Table.CombineColumns(#\"Reordered Columns6\",{\"Ward\", \"School Country - Copy\"},Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\"School Ward\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Merged Columns2\",{{\"School Country\", \"School County\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "dimHigherEducation",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "URN",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "597c52d9-72f1-4e36-af86-a0a95ba4c19a",
            "sourceColumn": "URN",
            "summarizeBy": "none"
          },
          {
            "name": "ALL_PROGRESSED",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6f066753-72a6-40f3-9f02-0f00b305dd0c",
            "sourceColumn": "ALL_PROGRESSED",
            "summarizeBy": "none"
          },
          {
            "name": "ALL_HE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a2ecd41b-21f0-4c04-8f3e-ff9c88222e46",
            "sourceColumn": "ALL_HE",
            "summarizeBy": "none"
          },
          {
            "name": "ALL_RUSSELL",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2fc30ccf-f386-408d-9568-125548639b16",
            "sourceColumn": "ALL_RUSSELL",
            "summarizeBy": "none"
          },
          {
            "name": "ALL_OXBRIDGE",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2a3355c8-e96b-4c2b-ad44-01ef6f178f51",
            "sourceColumn": "ALL_OXBRIDGE",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "7fe16cae-5147-415b-8872-bada048ea2a5",
        "partitions": [
          {
            "name": "dimHigherEducation",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Databases(\"localhost\\SQLEXPRESS\"),",
                "    a_levels_study_db = Source{[Name=\"a_levels_study_db\"]}[Data],",
                "    dbo_dimHigherEducation = a_levels_study_db{[Schema=\"dbo\",Item=\"dimHigherEducation\"]}[Data]",
                "in",
                "    dbo_dimHigherEducation"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Measure Table",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "e5f2d4a1-c27b-429f-a92d-2ea26f2afedd",
        "measures": [
          {
            "name": "School Count",
            "expression": "CALCULATE(COUNT('School Inspections'[URN]))",
            "formatString": "0",
            "lineageTag": "a57663c2-4c5d-47f2-affc-cb816c0ad779"
          }
        ],
        "partitions": [
          {
            "name": "Measure Table",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}